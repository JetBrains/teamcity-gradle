<?xml version="1.0" encoding="UTF-8"?>
<dsl-extension kind="buildStep" type="gradle-runner" generateDslJar="true">
  <class name="GradleBuildStep">
    <description>
      A [build step](https://www.jetbrains.com/help/teamcity/?Gradle) running gradle script
    </description>
  </class>
  <function name="gradle">
    <description>
      Adds a [build step](https://www.jetbrains.com/help/teamcity/?Gradle) running gradle script
      @see GradleBuildStep
    </description>
  </function>
  <params>
    <param name="ui.gradleRunner.gradle.tasks.names" dslName="tasks">
      <description>Space separated task names, when not set the 'default' task is used</description>
    </param>
    <param name="ui.gradleRUnner.gradle.build.file" dslName="buildFile" description="Path to build file"/>
    <param name="ui.gradleRunner.gradle.incremental" dslName="incremental" type="boolean" trueValue="true" falseValue="">
      <description>When set to true the :buildDependents task will be run on projects affected by changes</description>
    </param>
    <param name="teamcity.build.workingDir" dslName="workingDir" description="Custom working directory for gradle script"/>
    <param name="ui.gradleRunner.gradle.home" dslName="gradleHome">
      <description>Path to the Gradle home directory (parent of 'bin' directory). Overrides agent GRADLE_HOME environment variable</description>
    </param>
    <param name="ui.gradleRunner.additional.gradle.cmd.params" dslName="gradleParams">
      <description>Additional parameters will be added to the 'Gradle' command line</description>
    </param>
    <param name="ui.gradleRunner.gradle.wrapper.useWrapper" dslName="useGradleWrapper" type="boolean" trueValue="true" falseValue="">
      <description>
        Whether TeamCity should look for Gradle Wrapper scripts in the checkout directory and run script using it
      </description>
    </param>
    <param name="ui.gradleRunner.gradle.wrapper.path" dslName="gradleWrapperPath">
      <description>Optional path to the Gradle wrapper script, relative to the working directory</description>
    </param>
    <param name="ui.gradleRunner.gradle.debug.enabled" dslName="enableDebug" type="boolean" trueValue="true" falseValue="">
      <description>
        Whether Gradle should be executed with the -d option
      </description>
    </param>
    <param name="ui.gradleRunner.gradle.stacktrace.enabled" dslName="enableStacktrace" type="boolean" trueValue="true" falseValue="">
      <description>
        Whether Gradle should be executed with the -s option
      </description>
    </param>
    <param name="target.jdk.home" dslName="jdkHome">
      <description>
        Custom [JDK](https://www.jetbrains.com/help/teamcity/?Predefined+Build+Parameters#PredefinedBuildParameters-DefiningJava-relatedEnvironmentVariables) to use.
        The default is JAVA_HOME environment variable or the agent's own Java.
      </description>
    </param>
    <param name="jvmArgs">
      <description>
        Space-separated list of additional arguments for JVM
      </description>
    </param>
  </params>

  <examples>
    <example>
      <description>
        Adds a simple Gradle step with custom tasks and build file determined by Gradle.
        Gralde Wrapper located in the checkout directory is used.
      </description>
      <code>
        gradle {
            name = "Build myproject"
            tasks = ":myproject:clean :myproject:build"
        }
      </code>
    </example>
    <example>
      <description>
        Add a Gradles build step with custom Gradle task and build file localted in also custom
        [working directory](https://www.jetbrains.com/help/teamcity/?Build+Working+Directory).
        Gradle incremental building feature is enabled.
        Additional Gradle command line parameters is specified with a reference to a
        [configuration parameter](https://www.jetbrains.com/help/teamcity/?Using+Build+Parameters).
        Gralde build step is set up not to use Gradle Wrapper, so Gradle will be taken from the agent's GRADLE_HOME environment variable.
        Additional [run parameter](https://www.jetbrains.com/help/teamcity/?Gradle#Run+Parameters) for printing stacktrace is enabled.
        This step will be run inside a [Docker](https://www.jetbrains.com/help/teamcity/?Gradle#Docker+Settings) container.
        IDEA-based [code coverage](https://www.jetbrains.com/help/teamcity/?Gradle#Code+Coverage) is enabled.
      </description>
      <code>
        gradle {
            name = "Test my project in Docker"

            tasks = "clean test"
            buildFile = "build-test.gradle"
            incremental = true
            workingDir = "tests/"
            gradleParams = "%myproject.version%"

            useGradleWrapper = false

            enableStacktrace = true

            coverageEngine = idea {
                includeClasses = """
                    org.group.example.*
                    org.group.common
                """.trimIndent()
                excludeClasses = "org.group.common.test.*"
            }

            dockerImage = "gradle:jdk11"
            dockerImagePlatform = GradleBuildStep.ImagePlatform.Linux
        }
      </code>
    </example>
    <example>
      <description>
        Adds a Gradle build step with 'default' Gradle task and custom Gradle build file.
        Gradle Wrapper using is disabled, so Gradle will be taken with a reference to an
        [environment variable](https://www.jetbrains.com/help/teamcity/?Using+Build+Parameters).
        JDK is set to the [environment variable](https://www.jetbrains.com/help/teamcity/?Using+Build+Parameters) value
        with custom command line [parameters](https://www.jetbrains.com/help/teamcity/?Gradle#Java+Parameters).
        This build step will run even if some previous build steps are failed.
      </description>
      <code>
        gradle {
            name = "Default run on JDK 11"
            executionMode = BuildStep.ExecutionMode.RUN_ON_FAILURE

            buildFile = "build-dev.gradle"
            gradleHome = "%env.GRADLE_DEV_HOME%"
            useGradleWrapper = false

            jdkHome = "%env.JDK_11_0%"
            jvmArgs = "-Xmx2048m"
        }
      </code>
    </example>
  </examples>
</dsl-extension>