<?xml version="1.0" encoding="UTF-8"?>
<dsl-extension kind="buildFeature" type="dependencyCache.gradle-runner" generateDslJar="true">
  <class name="GradleCacheFeature">
    <description>
      Caches Gradle dependencies to speed up the builds. The feature tracks [shared cache](https://docs.gradle.org/current/userguide/directory_layout.html) directories
      (`&lt;gradle_user_home&gt;/caches/modules-2`)
      used by Gradle steps and caches dependencies in the artifact storage. The cache is automatically updated when dependencies of corresponding Gradle projects change.
      <p/>
      Dependency caching is most effective on **short-lived agents**. For long-lived or permanent cloud agents, periodically review hidden
      `.teamcity.build_cache` build artifacts to monitor cache size and contents. This helps prevent redundant dependencies and unnecessary cache bloat.
    </description>
  </class>
  <function name="gradleCache">
    <description>
      Adds Gradle dependency cache to the build. The feature tracks [shared cache](https://docs.gradle.org/current/userguide/directory_layout.html) directories
      (`&lt;gradle_user_home&gt;/caches/modules-2`)
      used by Gradle steps and caches dependencies in the artifact storage. The cache is automatically updated when dependencies of corresponding Gradle projects change.
      <p/>
      Dependency caching is most effective on **short-lived agents**. For long-lived or permanent cloud agents, periodically review hidden
      `.teamcity.build_cache` build artifacts to monitor cache size and contents. This helps prevent redundant dependencies and unnecessary cache bloat.
    </description>
  </function>
  <params>
  </params>
  <examples>
    <example>
      <description>
        Enables Gradle dependency cache to speed up the builds
      </description>
      <code>
        gradleCache {
        }
      </code>
    </example>
  </examples>
</dsl-extension>