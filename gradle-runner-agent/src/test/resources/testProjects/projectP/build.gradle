apply plugin: "java"

import org.gradle.api.internal.tasks.testing.*

task custom(type: CustomTask) {
  binResultsDir = new File("build")
  reports {
    html.enabled = true
    junitXml.enabled = true
    reports.junitXml.destination = new File('build')
    reports.html.destination = new File('build')
  }
}

class CustomTask extends AbstractTestTask {
  protected CustomTestExecutionSpec createTestExecutionSpec() { new CustomTestExecutionSpec() }

  protected CustomTestExecuter createTestExecuter() { new CustomTestExecuter() }
}

class CustomTestExecutionSpec implements TestExecutionSpec {}

class CustomTestExecuter implements TestExecuter<CustomTestExecutionSpec> {
  void execute(CustomTestExecutionSpec testExecutionSpec, TestResultProcessor testResultProcessor) {
    def time = new TestTime()
    testResultProcessor.started(new DefaultTestSuiteDescriptor("suite", "org.jetbrains"), new TestStartEvent(time.next))
    testResultProcessor.started(new DefaultTestDescriptor("test", "MyTest", "test"), new TestStartEvent(time.next))
    (0..101).forEach{
      testResultProcessor.output("test", new TestOutputEvent(){
        Destination getDestination(){
          Destination.StdOut
        }
        String getMessage() {
          "$it\n"
        }
      })
    }
    testResultProcessor.completed("test", new TestCompleteEvent(time.next))
    testResultProcessor.completed("suite", new TestCompleteEvent(time.next))
  }

  void stopNow() {}

  class TestTime {
    long time

    long getNext() {
      time += 100
    }
  }
}
