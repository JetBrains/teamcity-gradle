apply plugin: "java"

import org.gradle.api.internal.tasks.testing.*

tasks.register('custom', CustomTask) {
  binaryResultsDirectory = file("bin")
  reports.enabledReports.html.outputLocation = file("build")
  reports.enabledReports.junitXml.outputLocation = file("build")
}

class CustomTask extends AbstractTestTask {
  protected CustomTestExecutionSpec createTestExecutionSpec() { new CustomTestExecutionSpec() }
  protected CustomTestExecuter createTestExecuter() { new CustomTestExecuter() }
}

class CustomTestExecutionSpec implements TestExecutionSpec {}

class CustomTestExecuter implements TestExecuter<CustomTestExecutionSpec> {
  void execute(CustomTestExecutionSpec testExecutionSpec, TestResultProcessor testResultProcessor) {
    testResultProcessor.started(new DefaultTestSuiteDescriptor("suite", "suite"), new TestStartEvent(100L))

    def name = "testName"
    testResultProcessor.started(new DefaultTestDescriptor(name, "Foo", "bar"), new TestStartEvent(100L))
    testResultProcessor.failure(name, TestFailure.fromTestFrameworkFailure(new RuntimeException("custom error", null, true, false)))
    testResultProcessor.completed(name, new TestCompleteEvent(200L))

    testResultProcessor.completed("suite", new TestCompleteEvent(200L))
  }

  void stopNow() {}
}